# Workflow that will reject non-contributors submitting PRs. The PRs will be auto-closed

name: Reject Unauthorized PRs
on: [pull_request]
jobs:
  check_access:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: Reject Unauthorized PRs

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v2
      #  name: Checkout repository

      - name: Get collaborator status
        id: getCollaboratorStatus
        shell: bash
        env:
          SECRET: ${{ secrets.mySecret }}
        run: |
         echo "GET'ing https://api.github.com/repos/stuartko/template-spec-samples/collaborators/${{ github.actor }}"
         result=$(curl --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" --write-out '%{http_code}' --silent --output /dev/null https://api.github.com/repos/stuartko/template-spec-samples/collaborators/s${{ github.actor }})
         echo "::set-output name=collaboratorResult::$result"
         echo "Result is $result"
         
      - name: Reject if submitter is not collaborator TEST
        uses: actions/github-script@v5
        with:
         script: |
          try {
            var response = await fetch("https://api.github.com/repos/stuartko/template-spec-samples/collaborators/${{ github.actor }}", {
             headers: {
              "Authorization" : "Bearer ${{ secrets.GITHUB_TOKEN }}"
             }
            })
            
            core.info(`Response is '${response.status}'`)
            
            if (response == null || response.status != 204) {
             github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: 'Closing PR automatically. Submitter is not an authorized collaborator!',
             })
             github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              state: 'closed',
             })             
             
             core.setFailed('PR Submitter is not an authorized repo collaborator!')
            }
          }
          catch (err) {
            core.setFailed(`Encountered error during collaborator retrieval: ${err}`)
          }
          
      - name: Reject if submitter is not collaborator
        if: steps.getCollaboratorStatus.outputs.collaboratorResult != '204'
        uses: actions/github-script@v5
        with:
         script: |
          github.rest.issues.createComment({
           owner: context.repo.owner,
           repo: context.repo.repo,
           issue_number: context.payload.pull_request.number,
           body: 'Closing PR automatically. Submitter is not an authorized collaborator!',
          })
          github.rest.pulls.update({
           owner: context.repo.owner,
           repo: context.repo.repo,
           pull_number: context.payload.pull_request.number,
           state: 'closed',
          })
          core.setFailed('PR Submitter is not an authorized repo collaborator!')

      - name: Show GitHub context   
        env: 
          GITHUB_CONTEXT: ${{ toJson(github) }}   
        run: echo "$GITHUB_CONTEXT"
