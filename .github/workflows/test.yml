# Workflow that will reject non-contributors submitting PRs. The PRs will be auto-closed

name: Reject Unauthorized PRs
on: [pull_request]
jobs:
  check_access:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: Reject Unauthorized PRs

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:     
      - name: Reject if submitter is not collaborator TEST
        uses: actions/github-script@v5
        with:
         script: |
          try {
            var collaboratorUrl = "https://api.github.com/repos/stuartko/template-spec-samples/collaborators/${{ github.actor }}"
            core.info(`Performing GET on '${collaboratorUrl}'`)
            var response = await github.request(`GET ${collaboratorUrl}`, {
             headers: {
              "Authorization" : "token ${{ secrets.GITHUB_TOKEN }}"
             }
            })
            
            core.info(`Collaborator request returned status code: '${response.status}'`)
            
            if (response == null || response.status != 204) {
             github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: 'Closing PR automatically. Submitter is not an authorized collaborator!',
             })
             github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              state: 'closed',
             })             
             
             core.setFailed('PR Submitter is not an authorized repo collaborator!')
            }
          }
          catch (err) {
            core.setFailed(`Encountered error during collaborator retrieval: ${err}`)
          }
          
          core.notice("${{ github.actor }} is validated as a collaborator!")
          
    
