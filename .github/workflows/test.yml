# This is a basic workflow to help you get started with Actions

name: Reject Unauthorized PRs

# Controls when the workflow will run
on: [pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  check_access:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: Reject Unauthorized PRs

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        name: Checkout repository

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: Get collaborator status
        id: getCollaboratorStatus
        shell: bash
        env:
          SECRET: ${{ secrets.mySecret }}
        run: |
         echo "GET'ing https://api.github.com/repos/stuartko/template-spec-samples/collaborators/${{ github.actor }}"
         result=$(curl --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" --write-out '%{http_code}' --silent --output /dev/null https://api.github.com/repos/stuartko/template-spec-samples/collaborators/${{ github.actor }})
         echo "::set-output name=collaboratorResult::$result"
         echo "Result is $result"
      - name: Reject if submitter is not collaborator
        if: steps.getCollaboratorStatus.outputs.collaboratorResult != '204'
        uses: actions/github-script@v3
        with:
         script: |
          github.rest.pulls.createReviewComment({
           owner: context.repo.owner,
           repo: context.repo.repo,
           pull_number: context.payload.event.pull_request.number,
           body: 'Closing PR automatically. Submitter is not an authorized collaborator!',
          })
          core.setFailed('PR Submitter is not an authorized repo collaborator!')

      - name: Show GitHub context   
        env: 
          GITHUB_CONTEXT: ${{ toJson(github) }}   
        run: echo "$GITHUB_CONTEXT"
