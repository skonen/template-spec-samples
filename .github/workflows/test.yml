# Workflow that will reject non-contributors submitting PRs. The PRs will be auto-closed

name: Reject Unauthorized PRs
on: [pull_request_target]
jobs:
  check_access:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: Reject Unauthorized PRs

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Show GitHub context   
        env: 
          GITHUB_CONTEXT: ${{ toJson(github) }}   
        run: echo "$GITHUB_CONTEXT"
      - name: Reject if submitter is not collaborator
        uses: actions/github-script@v5
        with:
         script: |
          var isVerifiedCollaborator = false
          try {
            var collaboratorUrl = "https://api.github.com/repos/stuartko/template-spec-samples/collaborators/${{ github.actor }}"
            core.info(`Performing GET on '${collaboratorUrl}'`)
            var response = await github.request(`GET ${collaboratorUrl}`, {
             headers: {
              "Authorization" : "token ${{ secrets.GITHUB_TOKEN }}"
             }
            })
            
            core.debug(`Collaborator request returned status code: '${response.status}'`)    
            isVerifiedCollaborator = (response != null && response.status == 204);
          }
          catch (err) {
            if (err.status) {
             core.debug(`Collaborator request returned status code: '${err.status}'`)
            } else {
             // No status code was returned...
             core.setFailed(`Encountered error during collaborator status check: ${err}`)
            }
          }
          
          if (!isVerifiedCollaborator) {
          
               github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: 'Closing PR automatically. Submitter ${{ github.actor }} is not an authorized collaborator!',
               })
               
               github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                state: 'closed',
               })
               
               github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                labels: [ "UnverifiedSubmitter" ]
               })
             
              core.setFailed('PR Submitter is not an authorized repo collaborator!')
          } else {
               github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                labels: [ "VerifiedSubmitter" ]
              })

              core.info("${{ github.actor }} is validated as a collaborator!")
          }
          
    
